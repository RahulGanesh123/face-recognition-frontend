{"ast":null,"code":"var _jsxFileName = \"/Users/rahulganesh/Desktop/Projects/facial_recognition/src/App.js\";\nimport React, { Component } from \"react\";\nimport Navigation from './components/Navigation/Navigation';\nimport Logo from './components/Logo/Logo';\nimport Rank from './components/Rank/Rank';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\nimport './App.css';\nimport Signin from './components/Signin/Signin';\nimport Register from './components/Register/Register';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  /*We need to set both the input and the imageUrl as states, for the following reasons:\n      1. The input needs to be a state because when we want to detect a different image, we would want to detect from the new image, not the old one\n      2. The imageUrl needs to be a state as well, because when the input changes we don't immediately want it to be displayed, we want it to be dispalyed AFTER the button is clicked.  \n          So that is why we would set the imageUrl to the input in onButtonSubmit, and that is why we would pass the imageurl to the facerecognition component\n  */\n  input: '',\n  imageUrl: '',\n  box: {},\n  route: 'signin',\n  isSignedIn: false,\n  user: {\n    id: '',\n    name: '',\n    password: '',\n    email: '',\n    entries: 0,\n    joined: ''\n  }\n};\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.loadUser = data => {\n      this.setState({\n        user: {\n          id: data.id,\n          name: data.name,\n          password: data.password,\n          email: data.email,\n          entries: data.entries,\n          joined: data.joined\n        }\n      });\n    };\n\n    this.calculateFaceLocation = data => {\n      const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box;\n      const image = document.getElementById('inputimage');\n      const width = Number(image.width);\n      const height = Number(image.height);\n      return {\n        leftCol: clarifaiFace.left_col * width,\n        topRow: clarifaiFace.top_row * height,\n        rightCol: width - clarifaiFace.right_col * width,\n        bottomRow: height - clarifaiFace.bottom_row * height\n      };\n    };\n\n    this.displayFaceBox = box => {\n      this.setState({\n        box: box\n      });\n    };\n\n    this.onInputChange = event => {\n      this.setState({\n        input: event.target.value\n      });\n    };\n\n    this.onButtonSubmit = () => {\n      this.setState({\n        imageUrl: this.state.input\n      });\n      fetch('http://localhost:3000/imageUrl', {\n        method: 'post',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          id: this.state.input\n        })\n      }).then(response => {\n        if (response) {\n          fetch('http://localhost:3000/image', {\n            method: 'put',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n              id: this.state.user.id\n            })\n          }).then(response => response.json()).then(count => {\n            this.setState(Object.assign(this.state.user, {\n              entries: count\n            }));\n          }).catch(console.log);\n        }\n\n        this.displayFaceBox(this.calculateFaceLocation(response));\n      }).catch(err => console.log(err));\n    };\n\n    this.onRouteChange = route => {\n      if (route === 'signin') {\n        this.setState(initialState);\n      } else if (route === 'home') {\n        this.setState({\n          isSignedIn: true\n        });\n      }\n\n      this.setState({\n        route: route\n      });\n    };\n\n    this.state = initialState;\n  }\n\n  render() {\n    const {\n      isSignedIn,\n      imageUrl,\n      route,\n      box\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(Navigation, {\n        isSignedIn: isSignedIn,\n        onRouteChange: this.onRouteChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this), route === 'home' ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Logo, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Rank, {\n          name: this.state.user.name,\n          entries: this.state.user.entries\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(ImageLinkForm, {\n          onInputChange: this.onInputChange,\n          onButtonSubmit: this.onButtonSubmit\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(FaceRecognition, {\n          box: box,\n          imageUrl: imageUrl\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 13\n      }, this) : route === 'signin' ? /*#__PURE__*/_jsxDEV(Signin, {\n        loadUser: this.loadUser,\n        onRouteChange: this.onRouteChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 36\n      }, this) : /*#__PURE__*/_jsxDEV(Register, {\n        loadUser: this.loadUser,\n        onRouteChange: this.onRouteChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 108\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"names":["React","Component","Navigation","Logo","Rank","FaceRecognition","ImageLinkForm","Signin","Register","initialState","input","imageUrl","box","route","isSignedIn","user","id","name","password","email","entries","joined","App","constructor","loadUser","data","setState","calculateFaceLocation","clarifaiFace","outputs","regions","region_info","bounding_box","image","document","getElementById","width","Number","height","leftCol","left_col","topRow","top_row","rightCol","right_col","bottomRow","bottom_row","displayFaceBox","onInputChange","event","target","value","onButtonSubmit","state","fetch","method","headers","body","JSON","stringify","then","response","json","count","Object","assign","catch","console","log","err","onRouteChange","render"],"sources":["/Users/rahulganesh/Desktop/Projects/facial_recognition/src/App.js"],"sourcesContent":["import React, {Component} from \"react\"\nimport Navigation from './components/Navigation/Navigation'\nimport Logo from './components/Logo/Logo'\nimport Rank from './components/Rank/Rank'\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition'\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm'\nimport './App.css';\nimport Signin from './components/Signin/Signin'\nimport Register from './components/Register/Register'\n\n\n\nconst initialState = {\n      /*We need to set both the input and the imageUrl as states, for the following reasons:\n          1. The input needs to be a state because when we want to detect a different image, we would want to detect from the new image, not the old one\n          2. The imageUrl needs to be a state as well, because when the input changes we don't immediately want it to be displayed, we want it to be dispalyed AFTER the button is clicked.  \n              So that is why we would set the imageUrl to the input in onButtonSubmit, and that is why we would pass the imageurl to the facerecognition component\n\n\n    */\n      input: '',\n      imageUrl: '',\n      box: {},\n      route: 'signin',\n      isSignedIn: false,\n      user: {\n        id: '',\n        name: '',\n        password: '',\n        email: '',\n        entries: 0,\n        joined: ''\n    }\n}\nclass App extends Component {\n  constructor() {\n    super()\n    this.state = initialState\n    }\n\n\n  loadUser = (data) => {\n    this.setState({user: {\n        id: data.id,\n        name: data.name,\n        password: data.password,\n        email: data.email,\n        entries: data.entries,\n        joined: data.joined\n    }})\n  }\n\n  calculateFaceLocation = (data) => {\n    const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box\n    const image = document.getElementById('inputimage')\n    const width = Number(image.width)\n    const height = Number(image.height)\n    return {\n      leftCol:  clarifaiFace.left_col * width,\n      topRow:   clarifaiFace.top_row * height,\n      rightCol: width - (clarifaiFace.right_col * width),\n      bottomRow: height - (clarifaiFace.bottom_row * height)\n    }\n  }\n\n  displayFaceBox = (box) => {\n    this.setState({box : box})\n  }\n\n  onInputChange = (event) => {\n    this.setState({input: event.target.value})\n  }\n\nonButtonSubmit = () => {\n    this.setState({imageUrl: this.state.input});\n    fetch('http://localhost:3000/imageUrl', {\n            method: 'post',\n            headers: {'Content-Type': 'application/json'},\n            body: JSON.stringify({\n              id: this.state.input\n            })\n          })\n      .then(response => {\n        if (response) {\n          fetch('http://localhost:3000/image', {\n            method: 'put',\n            headers: {'Content-Type': 'application/json'},\n            body: JSON.stringify({\n              id: this.state.user.id\n            })\n          })\n            .then(response => response.json())\n            .then(count => {\n              this.setState(Object.assign(this.state.user, { entries: count}))\n            })\n            .catch(console.log)\n\n        }\n        this.displayFaceBox(this.calculateFaceLocation(response))\n      })\n      .catch(err => console.log(err));\n  }\n\n\n  onRouteChange = (route) => {\n    if(route === 'signin') {\n      this.setState(initialState)\n    }\n    else if(route === 'home') {\n      this.setState({isSignedIn: true})\n    }\n    this.setState({route: route})\n  }\n\n  render() {\n    const { isSignedIn, imageUrl, route, box } = this.state\n    return (\n      <div className=\"App\">\n        <Navigation isSignedIn= {isSignedIn} onRouteChange={this.onRouteChange}/>\n        {route === 'home' \n          ? <div>\n              <Logo />\n              <Rank name={this.state.user.name} entries={this.state.user.entries}/>\n              <ImageLinkForm \n              onInputChange = {this.onInputChange} \n              onButtonSubmit = {this.onButtonSubmit}/>\n              <FaceRecognition box={box} imageUrl={imageUrl}/>\n            </div>\n            :(route === 'signin' ? <Signin loadUser={this.loadUser} onRouteChange={this.onRouteChange}/> : <Register loadUser={this.loadUser} onRouteChange={this.onRouteChange}/>)\n        }\n      </div>\n    )\n  }\n\n}\n\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}